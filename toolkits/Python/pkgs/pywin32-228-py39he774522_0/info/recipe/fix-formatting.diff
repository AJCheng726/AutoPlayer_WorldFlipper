diff --git a/Pythonwin/win32notify.cpp b/Pythonwin/win32notify.cpp
index 248f5b69..8b285eb0 100644
--- a/Pythonwin/win32notify.cpp
+++ b/Pythonwin/win32notify.cpp
@@ -374,22 +374,19 @@ BOOL Python_OnNotify(CWnd *pFrom, WPARAM, LPARAM lParam, LRESULT *pResult)
         PyErr_Warn(PyExc_Warning, "Exception in OnNotify() handler");
     else if (result == Py_None)  // allow for None "dont pass on", else result to windows
         bPassOn = TRUE;
-    else if
-        PyTuple_Check(result)
-        {
-            // Result should be a tuple of the LRESULT and a tuple to fill the appropriate
-            //	struct for this particular message
-            if (PyArg_ParseTuple(result, "O&O", PyWinLong_AsVoidPtr, &rc, &obOther))
-                PyNotifyParseExtraTuple(pHdr, obOther, fmt);
-            if (PyErr_Occurred()) {
-                gui_print_error();
-                PyErr_Format(ui_module_error, "Error parsing OnNotify() extra return info for code %d, fmt='%s'", code,
-                             fmt);
-                gui_print_error();
-            }
+    else if (PyTuple_Check(result)) {
+        // Result should be a tuple of the LRESULT and a tuple to fill the appropriate
+        //	struct for this particular message
+        if (PyArg_ParseTuple(result, "O&O", PyWinLong_AsVoidPtr, &rc, &obOther))
+            PyNotifyParseExtraTuple(pHdr, obOther, fmt);
+        if (PyErr_Occurred()) {
+            gui_print_error();
+            PyErr_Format(ui_module_error, "Error parsing OnNotify() extra return info for code %d, fmt='%s'", code,
+                            fmt);
+            gui_print_error();
         }
     // Otherwise result is just the LRESULT, which can be anything that fits in pointer size
-    else if (!PyWinObject_AsPARAM(result, (LPARAM *)&rc)) {
+    } else if (!PyWinObject_AsPARAM(result, (LPARAM *)&rc)) {
         gui_print_error();
         PyErr_SetString(ui_module_error,
                         "OnNotify did not return an LRESULT, or a tuple of (LRESULT, notify info tuple)");
diff --git a/com/win32comext/mapi/src/PyIAddrBook.i b/com/win32comext/mapi/src/PyIAddrBook.i
index 5899386b..b8073668 100644
--- a/com/win32comext/mapi/src/PyIAddrBook.i
+++ b/com/win32comext/mapi/src/PyIAddrBook.i
@@ -60,7 +60,7 @@ PyObject *PyIAddrBook::OpenEntry(PyObject *self, PyObject *args)
 	if (obEntry==Py_None) {
 		entryString = NULL;
 		entryStrLen = 0;
-	} else if PyString_Check(obEntry) {
+	} else if (PyString_Check(obEntry)) {
 		entryString = PyString_AsString(obEntry);
 		entryStrLen = PyString_Size(obEntry);
 	} else {
diff --git a/com/win32comext/mapi/src/PyIMAPIContainer.i b/com/win32comext/mapi/src/PyIMAPIContainer.i
index e90068d5..2b6fb13f 100644
--- a/com/win32comext/mapi/src/PyIMAPIContainer.i
+++ b/com/win32comext/mapi/src/PyIMAPIContainer.i
@@ -51,7 +51,7 @@ PyObject *PyIMAPIContainer::OpenEntry(PyObject *self, PyObject *args)
 	if (obEntry==Py_None) {
 		entryString = NULL;
 		entryStrLen = 0;
-	} else if PyString_Check(obEntry) {
+	} else if (PyString_Check(obEntry)) {
 		entryString = PyString_AsString(obEntry);
 		entryStrLen = PyString_Size(obEntry);
 	} else {
diff --git a/com/win32comext/mapi/src/PyIMAPIFolder.i b/com/win32comext/mapi/src/PyIMAPIFolder.i
index 20b62a8c..1bdd7007 100644
--- a/com/win32comext/mapi/src/PyIMAPIFolder.i
+++ b/com/win32comext/mapi/src/PyIMAPIFolder.i
@@ -162,7 +162,7 @@ PyObject *PyIMAPIFolder::DeleteFolder(PyObject *self, PyObject *args)
 		&obProgress, // @pyparm <o PyIMAPIProgress>|progress||A progress object, or None
 		&flags)) 
         return NULL;
-	if PyString_Check(obEntryId) {
+	if (PyString_Check(obEntryId)) {
 		eid = (LPENTRYID)PyString_AsString(obEntryId);
 		cbEID = PyString_Size(obEntryId);
 	} else {
diff --git a/com/win32comext/mapi/src/PyIMAPISession.i b/com/win32comext/mapi/src/PyIMAPISession.i
index 14392044..ca903976 100644
--- a/com/win32comext/mapi/src/PyIMAPISession.i
+++ b/com/win32comext/mapi/src/PyIMAPISession.i
@@ -53,7 +53,7 @@ PyObject *PyIMAPISession::OpenEntry(PyObject *self, PyObject *args)
 	if (obEntry==Py_None) {
 		entryString = NULL;
 		entryStrLen = 0;
-	} else if PyString_Check(obEntry) {
+	} else if (PyString_Check(obEntry)) {
 		entryString = PyString_AsString(obEntry);
 		entryStrLen = PyString_Size(obEntry);
 	} else {
@@ -170,7 +170,7 @@ PyObject *PyIMAPISession::Advise(PyObject *self, PyObject *args)
 	if (obEntry==Py_None) {
 		entryString = NULL;
 		entryStrLen = 0;
-	} else if PyString_Check(obEntry) {
+	} else if (PyString_Check(obEntry)) {
 		entryString = PyString_AsString(obEntry);
 		entryStrLen = PyString_Size(obEntry);
 	} else {
diff --git a/com/win32comext/mapi/src/PyIMsgStore.i b/com/win32comext/mapi/src/PyIMsgStore.i
index 229abe78..8f5f1023 100644
--- a/com/win32comext/mapi/src/PyIMsgStore.i
+++ b/com/win32comext/mapi/src/PyIMsgStore.i
@@ -54,7 +54,7 @@ PyObject *PyIMsgStore::OpenEntry(PyObject *self, PyObject *args)
 	if (obEntry==Py_None) {
 		entryString = NULL;
 		entryStrLen = 0;
-	} else if PyString_Check(obEntry) {
+	} else if (PyString_Check(obEntry)) {
 		entryString = PyString_AsString(obEntry);
 		entryStrLen = PyString_Size(obEntry);
 	} else {
@@ -264,7 +264,7 @@ PyObject *PyIMsgStore::Advise(PyObject *self, PyObject *args)
 	{
 		eid = NULL;
 		cbEID = 0;
-	} else if PyString_Check(obEntryId) {
+	} else if (PyString_Check(obEntryId)) {
 		eid = (LPENTRYID)PyString_AsString(obEntryId);
 		cbEID = PyString_Size(obEntryId);
 	} else {
diff --git a/win32/src/odbc.cpp b/win32/src/odbc.cpp
index 1b1c64c6..a4e5e1a9 100644
--- a/win32/src/odbc.cpp
+++ b/win32/src/odbc.cpp
@@ -932,8 +932,8 @@ static int bindInput(cursorObject *cur, PyObject *vars, int columns)
                 rv = 0;
             else if (PyString_Check(sitem))
                 rv = ibindString(cur, iCol, sitem);
-            else if
-                PyUnicode_Check(sitem) rv = ibindUnicode(cur, iCol, sitem);
+            else if (PyUnicode_Check(sitem))
+                rv = ibindUnicode(cur, iCol, sitem);
             else {  // Just in case some object doesn't follow the rules
                 PyErr_Format(PyExc_SystemError, "??? Repr for type '%s' returned type '%s' ???", item->ob_type,
                              sitem->ob_type);
diff --git a/win32/src/win32net/win32netmisc.cpp b/win32/src/win32net/win32netmisc.cpp
index 628ac114..5ae0d02c 100644
--- a/win32/src/win32net/win32netmisc.cpp
+++ b/win32/src/win32net/win32netmisc.cpp
@@ -1483,14 +1483,10 @@ static BOOL PyObject_AsAUTH_INPUT(PyObject *ob, NET_VALIDATE_AUTHENTICATION_INPU
         kw = ob;
         args = PyTuple_New(0);
         BOOL decref_args = (args != 0);
-    }
-    else if
-        PyTuple_Check(ob)
-        {
-            kw = NULL;
-            args = ob;
-        }
-    else {
+    } else if (PyTuple_Check(ob)) {
+        kw = NULL;
+        args = ob;
+    } else {
         PyErr_SetString(PyExc_TypeError, "Must be tuple or dict");
         return FALSE;
     }
@@ -1539,14 +1535,10 @@ static BOOL PyObject_AsCHANGE_INPUT(PyObject *ob, NET_VALIDATE_PASSWORD_CHANGE_I
         kw = ob;
         args = PyTuple_New(0);
         BOOL decref_args = (args != 0);
-    }
-    else if
-        PyTuple_Check(ob)
-        {
-            kw = NULL;
-            args = ob;
-        }
-    else {
+    } else if (PyTuple_Check(ob)) {
+        kw = NULL;
+        args = ob;
+    } else {
         PyErr_SetString(PyExc_TypeError, "Must be tuple or dict");
         return FALSE;
     }
